--- src/Form/FileDeleteForm.php
+++ src/Form/FileDeleteForm.php
@@ -10,6 +10,7 @@ use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
 use Drupal\file\FileUsage\FileUsageInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
+use Drupal\Core\Session\AccountInterface;
 
 /**
  * Provides a form for deleting a File.
@@ -30,11 +31,19 @@ class FileDeleteForm extends ContentEntityConfirmFormBase {
    */
   protected $fileUsage;
 
+  /**
+   * The current user account.
+   *
+   * @var \Drupal\Core\Session\AccountInterface
+   */
+  protected $account;
+
   /**
    * {@inheritdoc}
    */
-  public function __construct(FileUsageInterface $file_usage, EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL) {
+  public function __construct(FileUsageInterface $file_usage, AccountInterface $account, EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL) {
     $this->fileUsage = $file_usage;
+    $this->account = $account;
 
     parent::__construct($entity_repository, $entity_type_bundle_info, $time);
   }
@@ -45,12 +54,41 @@ class FileDeleteForm extends ContentEntityConfirmFormBase {
   public static function create(ContainerInterface $container) {
     return new static(
       $container->get('file.usage'),
+      $container->get('current_user'),
       $container->get('entity.repository'),
       $container->get('entity_type.bundle.info'),
       $container->get('datetime.time')
     );
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function buildForm(array $form, FormStateInterface $form_state) {
+    $force_delete_access = FALSE;
+    if ($this->account->hasPermission('delete files override usage')) {
+      $force_delete_access = TRUE;
+    }
+    $delete_immediately_access = FALSE;
+    if ($this->account->hasPermission('delete files immediately')) {
+      $delete_immediately_access = TRUE;
+    }
+    $form = parent::buildForm($form, $form_state);
+    $form['force_delete'] = [
+      '#type' => 'checkbox',
+      '#title' => $this->t('Do you want to force this file to be deleted?'),
+      '#access' => $force_delete_access,
+      '#description' => $this->t('This option will override the usages check, which could result in a broken link. To avoid this, remove all usages of the file first.  Requires "Delete any media" permission.'),
+    ];
+    $form['delete_immediately'] = [
+      '#type' => 'checkbox',
+      '#title' => $this->t('Do you want to delete the file immediately?'),
+      '#access' => $delete_immediately_access,
+      '#description' => $this->t("This option will skip Drupal's file cleanup method and delete the file directly."),
+    ];
+    return $form;
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -79,8 +117,13 @@ class FileDeleteForm extends ContentEntityConfirmFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
+    $force_delete = $form_state->getValue('force_delete');
+    $delete_immediately = $form_state->getValue('delete_immediately');
     $usages = $this->fileUsage->listUsage($this->entity);
-    if ($usages) {
+
+    // If the file is in use, and we don't want to force delete, cancel the
+    // delete and set error message.
+    if ($usages && !$force_delete) {
       $url = new Url('view.files.page_2', ['arg_0' => $this->entity->id()]);
       $this->messenger()->addError($this->t('The file %file_name cannot be deleted because it is in use by the following modules: %modules.<br>Click <a href=":link_to_usages">here</a> to see its usages.', [
         '%file_name' => $this->entity->getFilename(),
